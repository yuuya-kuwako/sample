業務要件
要件定義とは、システム開発などのプロジェクトを始める前の段階で、必要な機能や要求をわかりやすくまとめていく作業のことです。企画の進行とともに要件定義に立ち返ることも多く、目的の脱線を防止する役割も果たします。

システム化の目的・背景・狙い
システム化あるいはプロジェクトを行う理由を説明した資料。進む方向性とも言え、この段階で上位者と認識の齟齬があると後述の手段（業務改革やシステム化）がひっくり返されることもあるため最も重要な資料だと言える。

ユーザー企業にヒアリングをしながら問題点・影響・原因・対策を整理していくのだが、実はこの作業は要件定義より前の「企画（システム構想とも呼ばれる）工程」にて行われていることが多い。

なお、混乱されがちな目的・背景・狙いの意味は下記の通り。（参考）日経BP『目的・背景・狙いとは何か？』


目的
なぜシステム投資を行うのか、何を達成しようとしているのか。

（例）
・現行システム陳腐化による過大な事務負担の軽減を目的として、新システムを構築する。

背景
前述の目的で書いた事柄がなぜ起きているのか（問題点や原因）。

（例）
・現行システムは構築から8年が経過し新たな業務への対応が困難であり、それを手作業で補っているため事務のミスが増加している。
・新業務に関する事務の比率が増加しており、今後さらに事務負担の増大が予想される。
・現行システムのインフラの多くは既にサポート期間が終了しており、維持管理上の深刻な課題となっている。

狙い
システム構築によってどのような効果を期待しているのか。
（例）
・システム化が未着手の○○業務への対応による効率化
・上記の○○業務システムと基幹システムとのデータ連携
・手作業によるデータ・チェック作業の自動化による人為ミスの減少

プロジェクト計画書
プロジェクト計画書はその名の通り、プロジェクト進行において必要な情報をまとめた計画書です。
プロジェクトの全体感をまとめた資料で、具体的で詳細な内容を記入するというよりも、全体が要約されているものになります。
形式はパワーポイントのスライドを用いるケースが一般的です。
テンプレート
ファイル:プロジェクト計画書.pptx

サンプル
ファイル:プロジェクト計画書 サンプル.pptx

参考資料
ファイル:プロジェクト計画書の書き方.pdf

ビジネスプロセス関連図
対象とする業務の全体象を把握するための資料。

作成する際に気を付ける点としては、
・関係部署やシステム関係が分かるようにする
・プロジェクトスコープが分かるようにする
・細かい業務手順は「業務フロー」に書く

ビジネスプロセスを変えることは影響も大きいため、
小規模なプロジェクトはビジネスプロセスは変更せずに、
業務の”手段を変える”（手作業→システム自動化等）というスコープになることが多い。

業務機能構成表
ビジネスプロセスから業務作業までを階層的に整理した資料。関係する業務の抜け漏れを防ぐために整理する。

当資料には業務概要を記載し、具体的な内容は「業務処理定義」に記載する。


ビジネスプロセスフロー
ビジネスプロセスの流れが分かる資料。

ここでは業務の根本的な機能・目的を見える化するために、手段であるシステム利用等は記載しない。
例えば、注文をメールで受けるか、オンラインシステムで受けるかは手段の違いでしかない。
ビジネスプロセスとしては「注文を受ける（受注）」である。

必要に応じて現行（AsIs）を整理する。


システム化業務フロー
業務の流れやシステムの利用タイミングといった業務手順が分かる資料。
業務フローの一部をシステム化するプロジェクトは多いため、業務フローを作成した経験のある人も多いと思う。

当資料には手段（注文をメールで受けるのかシステムで受けるのか等）も記載する。
また、通常の業務フローだけでなく、例外的な業務フロー（例えばクレーム対応等）も整理しておくと、機能要件の抜け漏れを防ぐことができる。

必要に応じて現行（AsIs）を整理する。


業務処理定義書
業務フローでは書ききれない詳細な業務内容が分かる資料。

各業務のIPOや5W2Hの観点で抜け漏れがないように整理していくと良い。
IPOの観点
・Input（入力）　：作業に必要なもの
・Process（処理）：作業の内容
・output（出力） ：作業後に作成されるもの

5W2Hの観点
What：何を入力し、何を出力するのか
Who：入力元、出力先、作業者は誰か
When：時間、時期、作業にかかる時間
Where：入力元、出力先、作業者の場所
Why：なぜ必要な作業なのか
How：どうやって作業をするのか（手段）
How many(How much)：業務量はどの程度か


機能設計
基本設計の主な作業である機能設計。

要件定義書の機能要件を具体化していく作業のため、要件定義の機能要件と同じ資料が並ぶ。

システム方式
システム方式設計はプラットフォーム設計とも呼ばれ、システムの稼働環境を中心に整理する。
こちらの資料も見積りへの影響が大きいため、要件定義工程で整理すべき資料である。

要件定義工程で整理している場合は無駄に作成する必要は無いため作成は不要である。
ハードウェア構成図
今回のシステムを実現するうえで必要なハードウェア構成を明確にする資料。
メインフレームが少なくなってきた現在ではサーバ構成図とも呼ばれる。

・ネットワーク
回線、ルータ、スイッチ、負荷分散装置、ファイアウォール等
・ストレージ
ディスク装置、テープ装置等

・サーバー
CPU、メモリ、入出力機構等
仮想化によって１つの物理サーバ上に複数の仮想サーバーを建てることが多いため、物理サーバと仮想サーバが分かるように整理すると良い。

ソフトウェア構成図
今回のシステムを実現するうえで必要なOSやミドルウェアを明確にする資料。各サーバ（仮想サーバ）毎に導入しているものを整理する。

OS
Windows、Mac-OS、Unix、Linux、iOS、Android等

ミドルウェア
・データベース
Oracle、DB2、SQLServer、MySQL、PostgreSQL等

・Webサーバ
Apache、Nginx、IIS等

・アプリケーションサーバ
WAS、Tomcat、WebLogic、JBoss、Interstage等

・データ連携
WebSphere-MQ、HULFT、全銀系ソフト等

・統合運用管理
JP1、Systemwalker、Tivoli、A-AUTO等

ネットワーク構成図
今回のシステムを実現するうえで必要なネットワーク構成を明確にする資料。

ネットワーク構成図に記述するべき代表的な項目は以下のとおり。
(A)外部との接続ポイント
(B)代表的なネットワーク機器の接続
(C)代表的な共有機器の接続
(D)共有機器の接続に必要なアドレス


アプリケーション機能構成図
開発するシステム機能が階層的に分かる資料。
システム化業務フローと紐づけられるようにIDを採番しておくと良い。

抜け漏れに気付くために、表形式で管理することも多い。



画面設計
画面一覧や画面遷移については、要件定義工程で整理している場合、基本設計で修正されることはあまり無い。
（一覧や画面遷移が修正されると見積りへの影響が大きい）

画面レイアウトはより具体化し、画面入力項目一覧、画面アクション定義といった資料を基本設計工程にて新たに整理する。
画面一覧
開発する画面の規模感が分かる資料。

要件定義工程で作成している場合、基本設計工程で画面が追加や削減されることはあまり無いため、要件定義書の資料のままとなることが多い。


画面遷移図
画面の流れが分かる資料。

要件定義で作成する場合は正常な画面遷移のみを記載するが、基本設計ではエラー時の遷移先などを細かく取り決めていくことになる。


画面設計書
画面の概要・レイアウト・項目・処理をまとめた資料。

画面概要
画面の概要を共有するための資料。
画面レイアウト
画面のイメージを共有するための資料。

要件定義で作成する場合はざっくりとした画面イメージで良いが、基本設計では曖昧な部分がないように確実に決めていく。
画面項目定義
画面の入出力を明確にする資料。

項目毎に内容を整理する。
画面イベント定義
画面操作におけるシステム動作を明確にする資料。

マウスイベントや入力チェック等の動作を決める。

画面イベント詳細定義
画面操作におけるシステム動作をより詳細に明確にする資料。


業務プロセス設計
API一覧と共通処理一覧は要件定義で整理していた場合、大きな変更は無い。

API一覧
プロジェクトで開発するAPIを一覧にまとめた資料。



API設計書
APIの入出力・処理をまとめた資料。

API入出力
APIのリクエストとレスポンスをまとめた資料。

API処理定義
APIの処理を定義した資料。

共通処理を使用する場合、その旨も記載する。

API処理詳細定義
API処理定義で記載した処理の詳細を記載する資料。


共通処理一覧
プロジェクトで開発する共通処理を一覧にまとめた資料。

共通処理設計書
共通処理を記載した資料。

共通処理定義
共通的な処理を定義する資料。

共通処理詳細定義
共通処理定義で記載した処理の詳細を記載する資料。


帳票設計
帳票一覧や帳票概要は要件定義で整理していた場合、大きな変更は無い。

要件定義で作成していた場合、基本設計では「レイアウト決定」、「出力項目一覧の整理」、「編集定義の決定」の３つが主な作業となる。
帳票一覧
プロジェクトで開発する帳票を一覧にまとめた資料。

要件定義で一覧表を作っていれば基本設計では流用するだけだが、もし作っていなければ基本設計で一覧を整理しておきたい。

帳票設計書
帳票のレイアウト・項目・処理を整理した資料。

帳票概要
帳票の出力場所や業務上の用途が分かる資料。

発行タイミングや発行量（ページ数）は、システム機能設計をするうえでも考慮すべきポイントになってくる。
帳票レイアウト
帳票の具体的なイメージを明確にする資料。

要件定義で作成する場合はざっくりとしたイメージでも良いが、基本設計では項目の位置を後述の「帳票出力項目一覧」と合うように決める必要がある。
帳票出力項目一覧
帳票に表示する項目の内容を具体的に述べた資料。

出力ルールが複雑な項目は後述の「帳票編集定義」に記載する。
帳票編集定義
帳票の編集方法を述べた資料。

ジョブ・ジョブネット設計
ジョブネット一覧、 ジョブ一覧は要件定義で整理していない場合は基本設計でまとめる。

ジョブネット一覧
バッチのジョブのジョブネットをまとめた資料。


ジョブ一覧
バッチのジョブをまとめた資料。



ジョブネット処理フロー
ジョブネットの処理フローを記載した資料。



ジョブ処理フロー
ジョブの処理フローを記載した資料。


バッチ設計
バッチ一覧、バッチ概要は要件定義で整理していない場合は基本設計でまとめる。

基本設計では「バッチフロー」「バッチ処理定義」が主な作業となる。

バッチ一覧
プロジェクトで開発するバッチ機能を一覧にまとめた資料。

バッチ設計書
バッチの概要・フロー・処理をまとめた資料。

バッチ概要
バッチの概要を記載した資料。

バッチフロー
バッチ処理の流れにおける入力・処理機能・出力を整理した資料。

処理をどう分けるかを検討することになるが、データ抽出・加工・更新といったように機能を分けておくと、
テストをする際にデータベースを都度戻さなくてよいので効率が良くなる。

バッチ処理定義
バッチ処理フローの１つ１つの処理について、入力・処理・出力を整理した資料。

基本設計ではなく、詳細設計で作成する場合もある。

バッチ処理詳細定義
バッチ処理定義で記載した処理の詳細を記載する資料。

メッセージ設計
基本設計、もしくは詳細設計で整理する資料。

メッセージ一覧
プロジェクトで開発する画面・帳票・API・バッチなどでしようするメッセージを一覧にまとめた資料。

プロパティ設計
プロパティ一覧
プロパティ設計書
ログ設計
基本設計、もしくは詳細設計で整理する資料。

ログ設計書
プロジェクトで開発する画面・帳票・API・バッチなどで出力するログを整理した資料。


テーブル・ファイル要件
要件定義で主要なテーブルを整理していた場合、ER図や一覧資料については、設計を進めるにつれて処理に必要なテーブルを追記することもある。

要件定義で上記を整理していた場合は基本設計工程ではテーブル定義やCRUD図の整理が主な作業となる。
CRUD図は整理する組織と整理しない組織が大きく分かれる印象があるが、整理しておくと機能漏れやデッドロックの防止につながる。
テーブル関連図(ER図)
システムで取り扱うテーブル関係が分かる資料。

要件定義で整理する場合は主要なテーブルのみを記載するが、
基本設計では機能実現に必要なテーブルをきっちりと書き出していく。
一方で、プログラミングをしていく中で必要となるテーブルも出てくるので、その場合は別途資料を修正することになる。

テーブル・ファイル一覧
前述したテーブル関連図（ER図）をもとに、主要なテーブルを一覧にまとめた資料。

作られ方からテーブルを分類しておくとCRUD図を整理する際に役立つ。

テーブル・ファイル定義
前述したテーブル一覧を元にテーブル内の主要なデータ項目を一覧にまとめた資料。

要件定義で整理する場合、主要な項目のみで良いが、設計工程では機能実現に必要な項目をきっちりと書き出していく。

もちろんプログラミングをするなかで必要となる内部処理用の項目が追加されることも多いので、その場合は別途資料を修正する。

CRUD図
各テーブルの作成・参照・更新・削除を整理した資料で、機能漏れやデッドロックの防止が期待できる。

基本設計ではなく詳細設計で整理する場合もあるし、組織によってはソースコードを元に自動生成する場合もある。

コード定義書
テーブルに定義した項目の中でテーブルの値だけで意味を理解できない分類などを作成した場合に整理する資料。

例）R：読み込み専用　W：書き込み可能

外部インターフェース設計
システムを構築する上で必要な外部システムとの連携（インターフェース）について整理する。

見積りへのインパクトが大きくなりがちなので関連図や一覧表については早めに整理すべきである。
外部システム関連図
関連システムとのデータ連携を図解した資料。

外部インターフェース一覧
関連システムとのデータ連携を一覧にまとめた資料。
見積りに影響しやすいので5W2Hで整理しておきたい。

外部インターフェース設計書
外部インターフェースの定義・処理をまとめた資料。

外部インターフェース定義
関連システムとのデータのやりとりについて、主要なデータ項目を一覧にまとめた資料。

要件定義で整理する場合、主要な項目のみで良いが、基本設計では送受信の識別やデータ破損識別（レコード長等）といったチェック用の項目も漏れなく書き出していく。
外部インターフェース処理概要
外部システムとのデータ連携について、手順やチェック方法等を取り決めた資料。

例えば下記のようなことを整理する。
・送受信ファイル名
・受信時のチェック内容
・エラー時の処理内容
・送信時のリトライ回数
・バックアップ方法
など

非機能要件
機能要件と並行して「非機能要件」についても整理していく。
非機能要件は軽視されがちだが事業に大きな影響を与える可能性があるため、要件定義の重要な検討事項として位置付けられている。
非機能設計書
プロジェクトの非機能をまとめた資料。

可用性
システムを継続的に利用するための要求。

ハードウェアやソフトウェア起因による障害、あるいは災害等によって、予期せぬシステム停止が発生する。
こういった障害の回避策あるいは影響の軽減策について、要求を整理する。

重要項目
・稼働率
・目標復旧時間
・大規模災害次の復旧
性能・拡張性
システムの性能および将来のシステム拡張に関する要求。

重要項目
・性能目標（レスポンスやスループット）
・拡張性の有無（ディスク等のリソース）

運用・保守性
システム運用保守に関する要求。

運用保守の方法や手順を整理する中で、購入機器や開発機能が追加になることがあるため、要件定義での検討が必要となる。

重要項目
・運用時間
・バックアップ
・運用監視（サーバー死活監視等）
・マニュアル作成
・メンテナンス許容時間


移行性
現行システム資産の移行に関する要求。

重要項目
・移行方式の規定（一括or段階的）
・移行時のシステム停止可否
・設備やデータ移行の有無

セキュリティ
情報システムの安全性の確保に関する要求。

重要項目
・利用者の公開範囲

システム環境・エコロジー
システム設置場所やエコロジー(CO2排出量や消費エネルギー等）に関する要求。

重要項目
・法律や条例などの制約有無
・耐震の必要性

WBS
プロジェクトで発生するタスクと作業日、実績を整理・記載する資料。

課題表
プロジェクトで発生した課題を整理する資料。

QA表
プロジェクトで発生したQAを整理する資料。

レビュー票
プロジェクトで作成したものをレビューする時に使用する資料。

変更管理票
要件定義・設計で整理したものに変更があった場合に管理する資料。

障害管理一覧
プロジェクトで作成したものをテストするときに発生する障害を管理する資料。